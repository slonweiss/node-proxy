AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: SAM Template for RealEyes AI Node.js Proxy Lambda

Globals:
  Function:
    Timeout: 30
    MemorySize: 128

Parameters:
  ExistingImageBucketName:
    Type: String
    Description: "The name of the existing S3 bucket for images"
    Default: realeyes-ai-images

  ExistingCacheTableName:
    Type: String
    Description: "The name of the existing DynamoDB Cache Table"
    Default: RealEyesAICache

  ExistingCommentTableName:
    Type: String
    Description: "The name of the existing DynamoDB Comment Table"
    Default: RealEyesAIComments

  SageMakerEndpointName:
    Type: String
    Description: "The name of the SageMaker endpoint to invoke"
    Default: "pytorch-inference-2024-11-22-00-26-13-382"

Resources:
  NodeJsProxyFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: RealEyesAINodeJsProxy
      Handler: lambda.handler
      Runtime: nodejs20.x
      CodeUri: ./ # Directory containing your Lambda function code
      Description: Node.js Proxy for RealEyes AI
      Environment:
        Variables:
          S3_BUCKET: !Ref ExistingImageBucketName
          DYNAMODB_TABLE: !Ref ExistingCacheTableName
          SAGEMAKER_ENDPOINT_NAME: !Ref SageMakerEndpointName
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref ExistingImageBucketName
        - DynamoDBCrudPolicy:
            TableName: !Ref ExistingCacheTableName
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - "sagemaker:InvokeEndpoint"
              Resource: !Sub "arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:endpoint/${SageMakerEndpointName}"
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /analyze-image
            Method: post

  # Removed ImageBucket resource since it already exists
  # ImageBucket:
  #   Type: AWS::S3::Bucket
  #   Properties:
  #     BucketName: realeyes-ai-images

  # Updated CacheTable to reference existing table and corrected AttributeDefinitions
  # Removed creation of CacheTable since it exists
  # CacheTable:
  #   Type: AWS::DynamoDB::Table
  #   Properties:
  #     TableName: RealEyesAICache
  #     AttributeDefinitions:
  #       - AttributeName: ImageHash
  #         AttributeType: S
  #       - AttributeName: PHash
  #         AttributeType: S
  #     KeySchema:
  #       - AttributeName: ImageHash
  #         KeyType: HASH
  #     GlobalSecondaryIndexes:
  #       - IndexName: PHashIndex
  #         KeySchema:
  #           - AttributeName: PHash
  #             KeyType: HASH
  #         Projection:
  #           ProjectionType: ALL
  #     BillingMode: PAY_PER_REQUEST

  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref NodeJsProxyFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ServerlessRestApi}/*/*/*"

  HandleImageFeedbackFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: HandleImageFeedback
      Handler: handleImageFeedback.handler
      Runtime: nodejs20.x
      CodeUri: ./
      Description: Handle image feedback submissions
      Environment:
        Variables:
          DYNAMODB_TABLE: !Ref ExistingCacheTableName
          COMMENT_TABLE: !Ref ExistingCommentTableName
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ExistingCacheTableName
        - DynamoDBCrudPolicy:
            TableName: !Ref ExistingCommentTableName
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /submit-feedback
            Method: post

  HandleImageFeedbackPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref HandleImageFeedbackFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ServerlessRestApi}/*/*/*"

  # Removed CommentTable resource since it already exists
  # CommentTable:
  #   Type: AWS::DynamoDB::Table
  #   Properties:
  #     TableName: RealEyesAIComments
  #     AttributeDefinitions:
  #       - AttributeName: ImageHash
  #         AttributeType: S
  #       - AttributeName: CommentId
  #         AttributeType: S
  #     KeySchema:
  #       - AttributeName: ImageHash
  #         KeyType: HASH
  #       - AttributeName: CommentId
  #         KeyType: RANGE
  #     BillingMode: PAY_PER_REQUEST

  # Removed CloudFormationDeployRole since it already exists
  # CloudFormationDeployRole:
  #   Type: AWS::IAM::Role
  #   Properties:
  #     RoleName: CloudFormation-DeployLambdaRole
  #     ...

  ServerlessRestApi:
    Type: AWS::Serverless::Api
    DeletionPolicy: Retain
    Properties:
      StageName: Prod

Outputs:
  ApiUrl:
    Description: URL of the API endpoint
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/analyze-image"
