AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: SAM Template for RealEyes AI Node.js Proxy Lambda

Globals:
  Function:
    Timeout: 30
    MemorySize: 128

Resources:
  NodeJsProxyFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: RealEyesAINodeJsProxy
      Handler: index.handler
      Runtime: nodejs20.x
      CodeUri: ./ # Directory containing your Lambda function code
      Description: Node.js Proxy for RealEyes AI
      Environment:
        Variables:
          S3_BUCKET: !Ref ImageBucket
          DYNAMODB_TABLE: !Ref CacheTable
          SAGEMAKER_ENDPOINT: !Ref SageMakerEndpoint
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref ImageBucket
        - DynamoDBCrudPolicy:
            TableName: !Ref CacheTable
        - Statement:
            - Effect: Allow
              Action:
                - sagemaker:InvokeEndpoint
              Resource: !Ref SageMakerEndpoint
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /analyze
            Method: post

  ImageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: realeyes-ai-images

  CacheTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: RealEyesAICache
      AttributeDefinitions:
        - AttributeName: ImageHash
          AttributeType: S
      KeySchema:
        - AttributeName: ImageHash
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  SageMakerEndpoint:
    Type: AWS::SageMaker::EndpointConfig
    Properties:
      ProductionVariants:
        - InitialInstanceCount: 1
          InstanceType: ml.t2.medium
          ModelName: !Ref SageMakerModel
          VariantName: AllTraffic

  SageMakerModel:
    Type: AWS::SageMaker::Model
    Properties:
      ExecutionRoleArn: !GetAtt SageMakerExecutionRole.Arn
      PrimaryContainer:
        Image:
          {
            Fn::Sub: "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/sagemaker-model:latest",
          }
        ModelDataUrl: s3://your-model-bucket/model.tar.gz

  SageMakerExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - sagemaker.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSageMakerFullAccess

Outputs:
  ApiUrl:
    Description: URL of the API endpoint
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/analyze"
