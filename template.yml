AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: SAM Template for RealEyes AI Node.js Proxy Lambda

Parameters:
  DefaultVPCId:
    Type: AWS::EC2::VPC::Id
    Default: vpc-05aa482b9270414e4
    Description: The ID of the default VPC

Globals:
  Function:
    Timeout: 30
    MemorySize: 128

Resources:
  NodeJsProxyFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: RealEyesAINodeJsProxy
      Handler: lambda.handler
      Runtime: nodejs20.x
      CodeUri: ./ # Directory containing your Lambda function code
      Description: Node.js Proxy for RealEyes AI
      Environment:
        Variables:
          S3_BUCKET: !Ref ImageBucket
          DYNAMODB_TABLE: !Ref CacheTable
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref ImageBucket
        - DynamoDBCrudPolicy:
            TableName: !Ref CacheTable
        - VPCAccessPolicy: {}
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
        SubnetIds: !Split
          - ","
          - !ImportValue DefaultSubnetIds
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /analyze-image
            Method: post

  ImageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: realeyes-ai-images

  CacheTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: RealEyesAICache
      AttributeDefinitions:
        - AttributeName: ImageHash
          AttributeType: S
      KeySchema:
        - AttributeName: ImageHash
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  LambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Lambda function
      VpcId: !Ref DefaultVPCId

  DynamoDBEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: "*"
            Action:
              - "dynamodb:*"
            Resource: "*"
      ServiceName: !Sub com.amazonaws.${AWS::Region}.dynamodb
      VpcId: !Ref DefaultVPCId
      VpcEndpointType: Gateway
      RouteTableIds:
        - !ImportValue DefaultRouteTableId

  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref NodeJsProxyFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ServerlessRestApi}/*/*/*"

Outputs:
  ApiUrl:
    Description: URL of the API endpoint
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/analyze-image"
